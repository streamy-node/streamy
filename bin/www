var app = require("../app");
var http = require("http");

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || "8080");

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

// Notifications using websockets
var io = require("socket.io").listen(server);

async function startStreamyWebServer() {
  await app.initialize("config.yaml", io);

  ///////// Start the server ///////
  server.listen(port, function() {
    var host = server.address().address;
    var port = server.address().port;

    console.log("Streamy node listening at http://%s:%s", host, port);
  });
}

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

// Get the config file argument if any
var myArgs = process.argv.slice(2);
var default_config = "config.yaml";
if (myArgs.length >= 1) {
  if (typeof myArgs[0] === "string") {
    default_config = myArgs[0];
  } else {
    console.error("Invalid non string argument");
    process.exit(1);
  }
}

console.log("Using config file: ", default_config);
startStreamyWebServer(default_config);
